<!--

## What's that?

This is a proposed example of the basic structure of the <timeline/> element,
which we will use for handling history of distributed entities in EWP. This
example is for the LA (LA2.pdf posted here:
https://github.com/erasmus-without-paper/general-issues/issues/14), but the
general structure should look similar in case of IIAs too.

All this is greatly simplified. This is just an idea for WP3 to expand on.


## About authors and commiters

Author/committer definitions used below were based on similar definitions used
in version control systems. Our "version control" is greatly simplified (when
compared to Git for example), but I think we should reuse these definitions,
*if we need them* (I think we do?).

Author
    - describes the entity who made the change (usually a person, but not
      always!).
Author Date
    - indicates the time when the author has first initiated the change.
Committer HEI
    - SCHAC ID of the HEI who had pushed the change to the remote master host.
Commit Date
    - indicates the time when the master host has received and accepted the
      change.

"Author Date" and "Commit Date" can differ significantly when the client system
delays pushing user's changes to the remote master (this may happen for a
number of reasons, so having two dates might prove useful for understanding the
flow).
-->

<timeline>

    <!--
    Revision 1 - just the initial nomination. In general, this will include
    student and HEI data, as in this section of the example document:
    https://i.imgur.com/ZNAvw5g.png

    (There will be only one `create` element in the timeline, always first.)
    -->
    <create
        author="Sending Coordinator's Name &lt;coordinator@uw.edu.pl>"
        author-date="2015-03-26T08:44:12+02:00"
        committer-hei="uw.edu.pl"
        commit-date="2015-03-26T08:44:12+02:00"
    >
        <initial-contents>
            <!--
            Simplified.

            Initial contents should include at least all elements which are *required*
            in the Mobility object. (All optional elements can be committed later, in
            separate revisions.)
            -->
            <student>Student's Name and Data</student>
            <sending-hei>University of Warsaw, Poland</sending-hei>
            <receiving-hei>
                Rheinische Friedrich-Wilhelms Universit√§t Bonn, Germany
            </receiving-hei>
        </initial-contents>
    </create>

    <!--
    Nomination gets acceppted. (Not sure if there's need for it to be approved
    by the sending coordinator? Probably not.)
    -->

    <approve-nomination
        author="Receiving Coordinator's Name &lt;coordinator@uni-bonn.de>"
        author-date="2015-03-27T11:44:12+02:00"
        committer-hei="uni-bonn.de"
        commit-date="2015-03-27T11:44:15+02:00"
    >
        <revision>1</revision>
    </approve-nomination>

    <!--
    In the example given, first (initial) version of the LA is approved
    on 26.07.2015, while still being empty. https://i.imgur.com/dk0Wg9k.png
    We can express it as approvingLA in Mobility object's revision 1.
    -->

    <approve-learning-agreement
        author="Sending Coordinator's Name &lt;coordinator@uw.edu.pl>"
        author-date="2015-07-26T10:00:00+02:00"
        committer-hei="uw.edu.pl"
        commit-date="2015-03-26T10:00:00+02:00"
    >
        <revision>1</revision>
    </approve-learning-agreement>
    <approve-learning-agreement
        author="Receiving Coordinator's Name &lt;coordinator@uni-bonn.de>"
        author-date="2015-07-26T16:00:00+02:00"
        committer-hei="uni-bonn.de"
        commit-date="2015-03-26T16:00:02+02:00"
    >
        <revision>1</revision>
    </approve-learning-agreement>

    <!--
    Courses are added to the LA. Let's assume it is the STUDENT who adds them.
    -->

    <!-- Revision 2 -->
    <add-course-to-learning-agreement>
        author="Student's Name &lt;student@uw.edu.pl>"
        author-date="2015-03-26T08:44:12+02:00"
        committer-hei="uw.edu.pl"
        commit-date="2015-03-26T08:44:12+02:00"
    >
        <course>
            <!-- Simplified -->
            <name>German Language Course</name>
        </course>
        <position>0</position>
    </add-course-to-learning-agreement>

    <!--
    I'm skipping revisions 3, 4, 5, 6, and 7 for simplicity. These revisions
    will be represented by <add-course-to-learning-agreement/> elements as above,
    created for these courses: https://i.imgur.com/tGziWKs.png
    -->

    <!--
    At this point the second version of the LA gets accepted. However, based on
    the example PDF document, we cannot truly deduce who accepted it an when. The
    way I understand the PDF, we only know when the (N-1)-st revision got cancelled
    (and replaced with the final one). So, there are multiple scenarios leading to
    the result presented in the PDF. I'll just pick one of these possible scenarios.
    -->

    <approve-learning-agreement
        author="Sending Coordinator's Name &lt;coordinator@uw.edu.pl>"
        author-date="2015-10-26T10:00:00+02:00"
        committer-hei="uw.edu.pl"
        commit-date="2015-10-26T10:00:00+02:00"
    >
        <revision>7</revision>
    </approve-learning-agreement>
    <approve-learning-agreement
        author="Receiving Coordinator's Name &lt;coordinator@uni-bonn.de>"
        author-date="2015-10-30T16:00:00+02:00"
        committer-hei="uni-bonn.de"
        commit-date="2015-10-30T16:00:02+02:00"
    >
        <revision>7</revision>
    </approve-learning-agreement>

    <!--
    Revision 8. At this point, one course gets deleted. In the example it is
    the STUDENT who deletes it https://i.imgur.com/TIqTWY3.png, but - to make
    it clear that it is possible - let's assume it is the RECEIVING COORDINATOR
    who does it (both scenarios are possible in EWP).
    -->

    <delete-course-from-learning-agreement
        author="Receiving Coordinator's Name &lt;coordinator@uni-bonn.de>"
        author-date="2015-11-03T16:00:00+02:00"
        committer-hei="uni-bonn.de"
        commit-date="2015-11-03T16:00:02+02:00"
    >
        <position>0</position> <!-- First course on the LA - German Language Course -->
        <reason-code>
            1
            <!-- "Previously selected educational component is not available
            at the Receiving Institution" -->
        </reason-code>
        <details xml:lang="en">
            Cannot assign the student to this course due to the lack of places.
        </details>
    </delete-course-from-learning-agreement>

    <!-- Revision 9. Another course gets added instead. https://i.imgur.com/v5lFlJk.png -->

    <add-course-to-learning-agreement>
        author="Student's Name &lt;student@uw.edu.pl>"
        author-date="2015-11-04T08:44:12+02:00"
        committer-hei="uw.edu.pl"
        commit-date="2015-11-04T08:44:12+02:00"
    >
        <course>
            <!-- Simplified -->
            <id>611500511</id>
            <name>V5D4 - Selected Topics in Geometry</name>
        </course>
        <position>
            5
            <!--
            This position is 0-based, so "5" is the last position after
            "German Language Course" got removed.
            -->
        </position>
        <reason-code>5</reason-code> <!-- "Substituting a deleted component" -->
    </add-course-to-learning-agreement>

    <!-- LA gets approved again. -->
    <approve-learning-agreement
        author="Sending Coordinator's Name &lt;coordinator@uw.edu.pl>"
        author-date="2015-11-04T10:00:00+02:00"
        committer-hei="uw.edu.pl"
        commit-date="2015-11-04T10:00:00+02:00"
    >
        <revision>9</revision>
    </approve-learning-agreement>
    <approve-learning-agreement
        author="Receiving Coordinator's Name &lt;coordinator@uni-bonn.de>"
        author-date="2015-11-05T16:00:00+02:00"
        committer-hei="uni-bonn.de"
        commit-date="2015-11-05T16:00:02+02:00"
    >
        <revision>9</revision>
    </approve-learning-agreement>

</timeline>

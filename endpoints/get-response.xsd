<?xml version="1.0" encoding="UTF-8"?>
<xs:schema
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:a="https://github.com/erasmus-without-paper/ewp-specs-types-address/tree/stable-v1"
    xmlns:p="https://github.com/erasmus-without-paper/ewp-specs-types-phonenumber/tree/stable-v1"
    xmlns:course="https://github.com/erasmus-without-paper/ewp-specs-api-courses/tree/master"
    xmlns:xml="http://www.w3.org/XML/1998/namespace"
    xmlns:ewp="https://github.com/erasmus-without-paper/ewp-specs-architecture/blob/stable-v1/common-types.xsd"
    elementFormDefault="qualified"

    targetNamespace="https://github.com/erasmus-without-paper/ewp-specs-api-mobilities/blob/master/endpoints/get-response.xsd"
    xmlns="https://github.com/erasmus-without-paper/ewp-specs-api-mobilities/blob/master/endpoints/get-response.xsd"
>
    <!-- WRTODO: Replace all occurrences of 'master' (in all projects) with 'stable-v1' upon release. -->

    <xs:import
        schemaLocation="../../ewp-specs-architecture/common-types.xsd"
        namespace="https://github.com/erasmus-without-paper/ewp-specs-architecture/blob/stable-v1/common-types.xsd"
    /> <!-- WRTODO: absolute paths! -->

    <xs:import
        schemaLocation="../../ewp-specs-types-address/schema.xsd"
        namespace="https://github.com/erasmus-without-paper/ewp-specs-types-address/tree/stable-v1"
    /> <!-- WRTODO: absolute paths! -->

    <xs:import
        schemaLocation="../../ewp-specs-types-phonenumber/schema.xsd"
        namespace="https://github.com/erasmus-without-paper/ewp-specs-types-phonenumber/tree/stable-v1"
    /> <!-- WRTODO: absolute paths! -->

    <xs:import
        schemaLocation="../../ewp-specs-api-courses/response.xsd"
        namespace="https://github.com/erasmus-without-paper/ewp-specs-api-courses/tree/master"
    /> <!-- WRTODO: absolute paths! -->

    <xs:annotation>
        <xs:documentation>
            This schema is a part of the Erasmus Without Paper project. Before you start
            using it, make sure you have read the general rules described here:

            http://developers.erasmuswithoutpaper.eu/
        </xs:documentation>
    </xs:annotation>

    <xs:element name="mobilities-get-response">
        <xs:annotation>
            <xs:documentation>
                This describes the format of the response returned by the EWP Outgoing
                Mobilities API.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="SequenceOfMobilities"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:group name="SequenceOfMobilities">
        <xs:annotation>
            <xs:documentation>
                This is global, because it is used in external XSDs. It MUST stay this way, for
                backward compatibility.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="student-mobility-for-studies" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        A list of matching Student Mobilities for Studies. (Clients should use the
                        `mobility-id` subelements to match objects with their `mobility_id` request
                        parameters.)

                        Currently this is the only type of mobility exposed by this API. More types
                        MAY come in the future.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:group>

    <xs:element name="student-mobility-for-studies">
        <xs:complexType>
            <xs:annotation>
                <xs:documentation>
                    This describes a single Student Mobility for Studies.

                    In the future, it may become a "subclass" of a more generic Mobility parent class
                    (and some of the fields might be moved to the parent).
                </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                <xs:element name="mobility-id" type="ewp:AsciiPrintableIdentifier" minOccurs="1" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            Identifier of the mobility (as assigned by the sending HEI).
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="sending-hei" minOccurs="1" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            This describes the sending HEI - the home institution of the student being sent.
                        </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="hei-id" type="xs:string" minOccurs="1" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        SCHAC ID of the institution.
                                        https://github.com/erasmus-without-paper/ewp-specs-api-registry/#schac-identifiers

                                        Clients can fetch more information on this HEI from the Institutions API
                                        served on the sending HEI's servers.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="ounit-id" type="ewp:AsciiPrintableIdentifier" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        Optional organizational unit ID. If given, then it refers to the unit within
                                        the sending HEI's organizational structure, which is responsible for this
                                        student.

                                        Clients can fetch more information on this unit from Organizational Units API
                                        served on the sending HEI's servers.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="iia-id" type="ewp:AsciiPrintableIdentifier" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        Optional ID of the Institutional Agreement based on which the student is being
                                        nominated/sent.

                                        This ID should be provided by the server ONLY if it implements EWP's
                                        Interinstitutional Agreements API. Clients can fetch more information on this
                                        agreement from IIAs API served on the sending HEI's servers (e.g. contact
                                        information to an appropriate IRO representative responsible for sending
                                        students for mobilities based on this IIA).
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="receiving-hei" minOccurs="1" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            This describes the receiving HEI - the institution which will be hosting the
                            student.
                        </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="hei-id" type="xs:string" minOccurs="1" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        SCHAC ID of the institution.
                                        https://github.com/erasmus-without-paper/ewp-specs-api-registry/#schac-identifiers

                                        Clients can fetch more information on this HEI from the Institutions API
                                        served on the *receiving HEI's* servers.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="ounit-id" type="ewp:AsciiPrintableIdentifier" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        Optional organizational onit ID. If given, then it refers to the unit within
                                        the receiving HEI's organizational structure, which is responsible for receiving
                                        this student.

                                        If provided, then it MUST have the value of the "external" ounit-id, exactly as
                                        it has been assigned by the *receiving HEI* in its Organizational Units API.
                                        Clients can fetch more information on this unit from Organizational Units API
                                        served on the *receiving HEI's* servers.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="iia-id" type="ewp:AsciiPrintableIdentifier" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        Each IIA partner can assign an ID of its own to the same IIA. If the server is
                                        aware of the *receiving HEI's* ID assigned to the IIA based on which the
                                        student is being sent, then it outputs it here.

                                        Clients can fetch more information on this agreement from IIAs API served on
                                        the *receiving HEI's* servers (e.g. contact information of the coordinator who
                                        will receive the students).
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="student" minOccurs="1" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            The section describes the student who is being sent for this mobility.

                            These fields MAY change in time (e.g. after the student changes his name or
                            address).
                        </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="given-names" type="ewp:StringWithOptionalLang" minOccurs="1" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>
                                        The given names of the person.

                                        It MAY be specified in multiple languages (and/or multiple alphabets), as it
                                        has been explained in the `contact` element:
                                        https://github.com/erasmus-without-paper/ewp-specs-types-contact
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="family-name" type="ewp:StringWithOptionalLang" minOccurs="1" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>
                                        The family name of the person.

                                        It MAY be specified in multiple languages (and/or multiple alphabets), as it
                                        has been explained in the `contact` element:
                                        https://github.com/erasmus-without-paper/ewp-specs-types-contact
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="birth-date" type="xs:date" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        RECOMMENDED. Date of birth.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="citizenship" type="ewp:CountryCode" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        Code of the country to which the person belongs administratively and that
                                        issues the ID card and/or passport. E.g. "PL".
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="gender" type="ewp:Gender" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        Optional code of the gender.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="email" type="ewp:Email" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        Email address at which student should be contacted.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element ref="a:street-address" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        Optional street address of the person's home.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element ref="a:mailing-address" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        The postal address of this person. (This is usually much more useful
                                        than street address.)
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element ref="p:phone-number" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>
                                        A list of phone numbers at which this person can possibly be reached.
                                        The "best" numbers should be listed first.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="status" type="MobilityStatus" minOccurs="1" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            The *current* status of the mobility.

                            This status can be changed multiple times. History of these changes is recoreded
                            in the `timeline` element. This element contains only the most recently set value.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="planned-arrival-date" type="xs:date" minOccurs="1" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            Planned start date of the mobility (when the student is supposed to arrive).
                            This date is provided by the sending HEI before the mobility.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="planned-departure-date" type="xs:date" minOccurs="1" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            Planned end date of the mobility (when the student is supposed to leave).
                            This date is provided by the sending HEI before the mobility.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="actual-arrival-date" type="xs:date" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            Actual start date of the mobility (when the student has actually arrived).
                            This date is provided by the receiving HEI (either by direct contact between
                            coordinators, or by respective API).
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="actual-departure-date" type="xs:date" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            Actual end date of the mobility (when the student has actually left).
                            This date is provided by the receiving HEI (either by direct contact between
                            coordinators, or by respective API).
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="nominee-eqf-level" type="ewp:EqfLevel" minOccurs="1" maxOccurs="1">
                    <!-- WRTODO: Is it okay that this is required? Perhaps it's a mistake? -->
                    <xs:annotation>
                        <xs:documentation>
                            The student is sent for the mobility as part of one of his study programmes.
                            This field contains the student's EQF level on this programme *at the time of
                            the nomination* (and it SHOULD NOT change in time, as opposed to the fields
                            present in the `student` element).
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="nominee-isced-f-code" type="xs:string" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            The student is sent to the mobility as part of one of his study programmes.
                            This field contains the ISCED-F field of education code that is closest to the
                            subject this programme (or, as EUC put is, "closest to the degree to be awarded
                            to the student by the Sending Institution").
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="nominee-language-skill" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:documentation>
                            List of the student's language skills *at the time of the nomination* (they
                            SHOULD NOT change in time).
                        </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="language" type="xs:language" minOccurs="1" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        The code of the language.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="cefr-level" type="ewp:CefrLevel" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        The level of language skill the student had.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="component-studied">
        <xs:annotation>
            <xs:documentation>
                This describes a single entry on the list of components studied (or planned to
                be studied) at the Receiving HEI.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="los-id" type="course:LosID" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            The EWP's LOS ID of the component, exactly as exposed via the receiving HEI's
                            Courses API. Please note, that is NOT necessarilly the same as the "Component
                            Code" present on the EUC template.
                            https://github.com/erasmus-without-paper/ewp-specs-api-courses#unique-identifiers

                            Please note, that the sending HEI is NOT required to make use of the receiving
                            HEI's Courses API when LA is being drafted. Also, the receiving HEI is NOT
                            required to implement the Courses API anyway. It is however REQUIRED for the
                            sending HEI to keep this field in its database (because the *receiving HEI*
                            might want to fill it out).

                            If the field *is* given, then the values of *many other* fields SHOULD be
                            derived from the matching values served by the Courses API.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="los-code" type="xs:string" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            This is the optional component code to be displayed to the end user. This field
                            MAY be entered "by hand" (for example by the student), especially if no
                            `los-id` is given. It might assist other users (and/or computer systems) when
                            they're trying to identify the component, but it does not necessarilly contain
                            a valid EWP's LOS ID used in the Courses API.

                            In case of many HEIs, it will be equal to the LOS ID provided above, but it's
                            purpose is entirely different. LOS IDs are surrogate identifiers (and, as such,
                            should not be displayed to the user), while LOS codes are "human readable", but
                            don't they are *not used* to identify entities in EWP network.

                            Related links:
                            https://github.com/erasmus-without-paper/ewp-specs-api-mobilities/issues/9
                            https://en.wikipedia.org/wiki/Surrogate_key
                            https://en.wikipedia.org/wiki/Natural_key
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="title" type="xs:string" minOccurs="1" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            Component title at the receiving institution. This field MAY be entered "by
                            hand" (for example by the student), especially if no `los-id` is given. It
                            might assist other users (and/or computer systems) when they're trying to
                            identify the component, but it does not necessarilly match the name exactly.

                            Note, that this field does not contain an `xml:lang` attribute, and it can be
                            provided only once (preferably in English). If clients want to retrieve titles
                            in other languages, then they can do this via the Courses API.

                            If it so happens that a component changes its name (on the receiving HEI's
                            servers), then it is the *receiving HEI* that SHOULD update all the titles of
                            the matching LOSes in all remote mobilities (of course, the *sending* HEI MAY
                            fix such inconsistencies too, if it somehow notices that a title has been
                            changed).
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="loi-id" type="course:LoiID" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            The EWP's LOI ID of the component, exactly as exposed via the receiving HEI's
                            Courses API.
                            https://github.com/erasmus-without-paper/ewp-specs-api-courses#unique-identifiers

                            Please note, that the sending HEI is NOT required to make use of the receiving
                            HEI's Courses API when LA is being drafted. Also, the receiving HEI is NOT
                            required to implement the Courses API anyway. It is however REQUIRED for the
                            sending HEI to keep this field in its database (because the *receiving HEI*
                            might want to fill it out).
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="academic-term-display-name" type="xs:string" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            The *name* of the academic term of the LOI at the receiving institution. This
                            field MAY be entered "by hand" (for example by the student), especially if no
                            `loi-id` is given. It might assist other users (and/or computer systems) when
                            they're trying to identify the LOI, but it does not necessarilly need to match
                            the name of academic term exactly.

                            Note, that we do not require a full-fledged academic-term element here
                            (https://github.com/erasmus-without-paper/ewp-specs-types-academic-term). The
                            sending HEI is NOT required to store start dates and end dates of
                            the receiving HEI's academic terms. If the clients want to fetch such
                            dates, then they can do this via the Courses API (each LOI element has them).
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="credit" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:documentation>
                            This describes various credit types which the student is expected to achieve by
                            completing this component. Usually these SHOULD be ECTS credits, but there MAY
                            be some exceptions (e.g. see footnotes in the attached EUC LA template).
                        </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="scheme" type="xs:string" minOccurs="1" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        Currently there is only one predefined scheme you can have here - "ects"
                                        (lowercase).

                                        You can also include any number of other credits with custom schemes.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="value" type="xs:decimal" minOccurs="1" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        The number of credits being awarded.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="component-recognized">
        <xs:annotation>
            <xs:documentation>
                This describes a single entry on the list of components recognized (or planned
                to be recognized) at the Sending HEI.

                As opposed to the `component-studied` element, both `los-id` and `loi-id` element
                are REQUIRED in `component-recognized`. This means that *if* the sending HEI
                wants to fill out the recognition section of the LA (it is recommended to do
                so), then it SHOULD also implement the Courses API (so that all the clients can
                access the LOIs properties, such as credits awarded for it).
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="los-id" type="course:LosID" minOccurs="1" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            The EWP's LOS ID of the component, exactly as exposed via the sending HEI's
                            Courses API. Please note, that is NOT necessarilly the same as the "Component
                            Code" present on the EUC template.
                            https://github.com/erasmus-without-paper/ewp-specs-api-courses#unique-identifiers
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="loi-id" type="course:LoiID" minOccurs="1" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            The EWP's LOI ID of the component, exactly as exposed via the sending HEI's
                            Courses API.
                            https://github.com/erasmus-without-paper/ewp-specs-api-courses#unique-identifiers
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="MobilityStatus">
        <xs:restriction base="xs:string">
            <xs:enumeration value="nomination">
                <xs:annotation>
                    <xs:documentation>
                        The sending HEI has nominated the student for mobility. The proposal has not
                        yet been accepted nor rejected by the receiving HEI.

                        This is the default status with which mobility entities are first created.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="rejected">
                <xs:annotation>
                    <xs:documentation>
                        The nomination has been rejected by the receiving HEI.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="live">
                <xs:annotation>
                    <xs:documentation>
                        The nomination has been accepted by the receiving HEI. This status doesn't
                        usually change throughout the mobility.

                        The mobility SHOULD have this stutus during the time when LA can be modified.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="recognized">
                <xs:annotation>
                    <xs:documentation>
                        The student has returned from the mobility and all achievements have been
                        recognized as indicated on the `component-recognized` list.

                        At this point, the mobility SHOULD become read-only. The latest revision of it
                        SHOULD be approved by all parties (no subsequent draft revisions should exist).
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cancelled">
                <xs:annotation>
                    <xs:documentation>
                        The nomination has been cancelled (either by the student, or by one of the
                        partner HEIs).
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

</xs:schema>
